language: haskell

env:
  - GHCVER=7.4.2
  - GHCVER=7.6.3
  - GHCVER=7.8.3
  - GHCVER=head
  # - >
  #   GHCVER=7.4.2
  #   MODE="-fsafe"

matrix:
  allow_failures:
    - env: GHCVER=head

before_install:
  # If $GHCVER is the one travis has, don't bother reinstalling it.
  # We can also have faster builds by installing some libraries with
  # `apt`. If it isn't, install the GHC we want from hvr's PPA along
  # with cabal-1.18.
  - |
    if [ $GHCVER = `ghc --numeric-version` ]; then
      # Try installing some of the build-deps with apt-get for speed.
      travis/cabal-apt-install --enable-tests $MODE
      export CABAL=cabal
    else
      # Install the GHC we want from hvr's PPA
      travis_retry sudo add-apt-repository -y ppa:hvr/ghc
      travis_retry sudo apt-get update
      travis_retry sudo apt-get install cabal-install-1.18 ghc-$GHCVER happy
      export CABAL=cabal-1.18
      export PATH=/opt/ghc/$GHCVER/bin:$PATH
    fi
  # Uncomment whenever hackage is down.
  # - mkdir -p ~/.cabal && cp travis/config ~/.cabal/config && $CABAL update
  - $CABAL update

  # Update happy when building with GHC head
  - |
    if [ $GHCVER = "head" ] || [ $GHCVER = "7.8.3" ]; then
      $CABAL install happy alex
      export PATH=$HOME/.cabal/bin:$PATH
    fi

  - sudo apt-get install libspeex-dev libspeexdsp-dev

  - |
    git clone https://github.com/relrod/codec2.git ~/codec2
    pushd ~/codec2
    git checkout builderror
    mkdir build_linux
    cd build_linux
    cmake -DCMAKE_INSTALL_PREFIX:PATH=/usr ..
    make
    sudo make install
    popd

install:
  - $CABAL install --dependencies-only --enable-tests
  - $CABAL configure -flib-Werror --enable-tests $MODE

script:
  - $CABAL build
  - $CABAL install
  - bindings-codec2-demo ~/codec2/raw/hts2a_g729a.raw /tmp/hts2a_g729a.haskell.c2
  - ~/codec2/build_linux/src/c2enc 3200 ~/codec2/raw/hts2a_g729a.raw /tmp/hts2a_g729a.upstream.c2
  - |
    function x() {
      hash1="$(sha512sum /tmp/hts2a_g729a.haskell.c2 | awk '{print $1}')"
      hash2="$(sha512sum /tmp/hts2a_g729a.upstream.c2 | awk '{print $1}')"
      echo "hash1: $hash1"
      echo "hash2: $hash2"
      [ "$hash1" == "$hash2" ] && return 0 || return 1
    }
    x